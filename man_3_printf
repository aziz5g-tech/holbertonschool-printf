.TH _printf 3 "2025-10-04" "holbertonschool-printf" "_printf manual"
.SH NAME
_printf \- custom printf implementation with buffered output and a subset of flags
.SH SYNOPSIS
.nf
.B #include "main.h"
.B int _printf(const char *format, ...);
.fi
.SH DESCRIPTION
.B _printf
prints formatted output to standard output and returns the number of characters
written, or \-1 on error. It supports a subset of conversion specifiers and
three non\-length flags.

The supported conversion specifiers are:
.BR c ,
.BR s ,
.BR S ,
.BR % ,
.BR d ,
.BR i ,
.BR b ,
.BR u ,
.BR o ,
.BR x ,
and
.BR X .

.SH FLAGS
The following flag characters are recognized for non\-custom conversions:

.TP
.B +
For signed decimal conversions
.BR d " and " i ,
force a sign to be prefixed to non\-negative numbers (a leading "\+").
The plus flag takes precedence over the space flag.

.TP
.B "space"
For signed decimal conversions
.BR d " and " i ,
if no sign is going to be written, prefix a single space.

.TP
.B #
Alternate form.
For
.B o
(octal), emit a single leading
.B 0
for non\-zero values.
For
.BR x " and " X
(hex), emit
.B 0x
or
.B 0X
respectively for non\-zero values.

.SH RETURN VALUE
On success, the number of characters printed is returned.
If
.I format
is NULL, or a fatal error occurs, \-1 is returned.

.SH NOTES
Flags apply only where meaningful.
For example,
.B +
and the space flag do not affect
.BR u ,
.BR o ,
.BR x ,
or
.BR X .
.PP
Edge sequences like
.BR "% " ,
or
.BR "% % % % " ,
are printed literally as a percent sign followed by a single space each time.

.SH EXAMPLES
.nf
_printf("%+d\\n", 7);          /* +7        */
_printf("% d\\n", 7);          /*  7        */
_printf("%#o\\n", 9);          /* 011       */
_printf("%#x\\n", 48879);      /* 0xbeef    */
_printf("%#X\\n", 48879);      /* 0XBEEF    */
_printf("% % % % \\n");        /* % % % %   */
.fi

.SH AUTHORS
Lina (linawsm52), Aziz (aziz5g-tech), Nourah (noneals)
